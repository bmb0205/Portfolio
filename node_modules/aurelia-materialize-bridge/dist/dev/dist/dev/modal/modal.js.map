{"version":3,"sources":["modal/modal.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;;yBAII,kBAFZ,gBAAgB,UAAhB,WACA,OAAO,OAAP,WAEE;AAED,iBAHW,OAGX,CAAY,OAAZ,EAAqB;gCAHV,SAGU;;;;AACnB,eAAK,OAAL,GAAe,OAAf,CADmB;AAEnB,eAAK,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,KAAK,OAAL,CAA7C,CAFmB;AAGnB,eAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAlB,CAHmB;AAInB,eAAK,OAAL,GAAe,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAf,CAJmB;SAArB;;AAHW,0BAUX,+BAAW;AACT,eAAK,gBAAL,CAAsB,UAAtB,CAAiC,OAAjC,EADS;AAET,YAAE,KAAK,OAAL,CAAF,CAAgB,KAAhB,CAAsB;AACpB,sBAAU,KAAK,UAAL;AACV,yBAAa,6BAA6B,KAAK,WAAL,CAA1C;AACA,mBAAO,KAAK,OAAL;WAHT,EAFS;;;AAVA,0BAmBX,+BAAW;AACT,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,OAApC,EADS;;;AAnBA,0BAuBX,mCAAa;AACX,+BAAqB,KAAK,OAAL,EAAc,gBAAnC,EADW;;;AAvBF,0BA2BX,2BAAQ,OAAO,SAAS;AACtB,+BAAqB,KAAK,OAAL,EAAc,aAAnC,EAAkD,EAAE,YAAF,EAAS,gBAAT,EAAlD,EADsB;;;AA3Bb,0BA+BX,uBAAO;AACL,YAAE,KAAK,OAAL,CAAF,CAAgB,KAAhB,CAAsB,MAAtB,EADK;;;AA/BI,0BAmCX,yBAAQ;AACN,YAAE,KAAK,OAAL,CAAF,CAAgB,KAAhB,CAAsB,OAAtB,EADM;;;eAnCG;;;;iBACe","file":"modal/modal.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { AttributeManager } from '../common/attributeManager';\nimport { fireMaterializeEvent } from '../common/events';\n\n@customAttribute('md-modal')\n@inject(Element)\nexport class MdModal {\n  @bindable() dismissible = true;\n\n  constructor(element) {\n    this.element = element;\n    this.attributeManager = new AttributeManager(this.element);\n    this.onComplete = this.onComplete.bind(this);\n    this.onReady = this.onReady.bind(this);\n  }\n\n  attached() {\n    this.attributeManager.addClasses('modal');\n    $(this.element).modal({\n      complete: this.onComplete,\n      dismissible: getBooleanFromAttributeValue(this.dismissible),\n      ready: this.onReady\n    });\n  }\n\n  detached() {\n    this.attributeManager.removeClasses('modal');\n  }\n\n  onComplete() {\n    fireMaterializeEvent(this.element, 'modal-complete');\n  }\n\n  onReady(modal, trigger) {\n    fireMaterializeEvent(this.element, 'modal-ready', { modal, trigger });\n  }\n\n  open() {\n    $(this.element).modal('open');\n  }\n\n  close() {\n    $(this.element).modal('close');\n  }\n}\n"]}