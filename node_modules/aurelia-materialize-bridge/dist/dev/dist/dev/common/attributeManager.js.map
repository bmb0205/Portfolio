{"version":3,"sources":["common/attributeManager.js"],"names":[],"mappings":"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","file":"common/attributeManager.js","sourceRoot":"/source/","sourcesContent":["/**\n * Adds css classes to a given element only if these classes are not already\n * present. Keeps a record of css classes which actually have been added.\n * This way, they can also be removed in a way which keeps the original classes\n * set by the user.\n * Most useful in attached() and detached() handlers.\n */\nexport class AttributeManager {\n  _colorClasses = [\n    'accent',\n    'primary'\n  ];\n  addedClasses = [];\n  addedAttributes = {};\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  addAttributes(attrs) {\n    let keys = Object.keys(attrs);\n    keys.forEach(k => {\n      if (!this.element.getAttribute(k)) {\n        this.addedAttributes[k] = attrs[k];\n        this.element.setAttribute(k, attrs[k]);\n      } else if (this.element.getAttribute(k) !== attrs[k]) {\n        this.element.setAttribute(k, attrs[k]);\n      }\n    });\n  }\n\n  removeAttributes(attrs) {\n    if (typeof attrs === 'string') {\n      attrs = [attrs];\n    }\n    attrs.forEach(a => {\n      if (this.element.getAttribute(a) && !!this.addedAttributes[a]) {\n        this.element.removeAttribute(a);\n        this.addedAttributes[a] = null;\n        delete this.addedAttributes[a];\n      }\n    });\n  }\n\n  addClasses(classes) {\n    if (typeof classes === 'string') {\n      classes = [classes];\n    }\n    classes.forEach(c => {\n      let classListHasColor = this._colorClasses.filter(cc => this.element.classList.contains(cc)).length > 0;\n      if (this._colorClasses.indexOf(c) > -1 && classListHasColor) {\n        //\n      } else {\n        if (!this.element.classList.contains(c)) {\n          this.addedClasses.push(c);\n          this.element.classList.add(c);\n        }\n      }\n    });\n  }\n\n  removeClasses(classes) {\n    if (typeof classes === 'string') {\n      classes = [classes];\n    }\n    classes.forEach(c => {\n      if (this.element.classList.contains(c) && this.addedClasses.indexOf(c) > -1) {\n        this.element.classList.remove(c);\n        this.addedClasses.splice(this.addedClasses.indexOf(c), 1);\n      }\n    });\n  }\n}\n"]}