{"version":3,"sources":["autocomplete/autocomplete.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQ;AAAU;;AACV;;AACA;;;gCAIK,yBAFZ,gBAAgB,iBAAhB,WACA,OAAO,OAAP,WAGE;AAED,iBAJW,cAIX,CAAY,OAAZ,EAAqB;gCAJV,gBAIU;;eAHrB,QAAQ,KAGa;;;;AACnB,eAAK,OAAL,GAAe,OAAf,CADmB;SAArB;;AAJW,iCAQX,+BAAW;AACT,cAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,WAArB,OAAuC,OAAvC,EAAgD;AAClD,iBAAK,KAAL,GAAa,KAAK,OAAL,CADqC;WAApD,MAEO,IAAI,KAAK,OAAL,CAAa,OAAb,CAAqB,WAArB,OAAuC,UAAvC,EAAmD;AAC5D,iBAAK,KAAL,GAAa,KAAK,OAAL,CAAa,EAAb,CAAgB,UAAhB,CAA2B,SAA3B,CAAqC,KAArC,CAD+C;WAAvD,MAEA;AACL,kBAAM,IAAI,KAAJ,CAAU,yEAAV,CAAN,CADK;WAFA;AAKP,eAAK,OAAL,GARS;;;AARA,iCAmBX,+BAAW;AAET,YAAE,KAAK,KAAL,CAAF,CAAc,QAAd,CAAuB,uBAAvB,EAAgD,GAAhD,CAAoD,OAApD,EAFS;AAGT,YAAE,KAAK,KAAL,CAAF,CAAc,QAAd,CAAuB,uBAAvB,EAAgD,MAAhD,GAHS;;;AAnBA,iCAyBX,6BAAU;;;AACR,eAAK,QAAL,GADQ;AAER,YAAE,KAAK,KAAL,CAAF,CAAc,YAAd,CAA2B;AACzB,kBAAM,KAAK,MAAL;WADR,EAFQ;;AAQR,YAAE,KAAK,KAAL,CAAF,CAAc,QAAd,CAAuB,uBAAvB,EAAgD,EAAhD,CAAmD,OAAnD,EAA4D,YAAM;AAChE,sBAAU,MAAK,KAAL,EAAY,QAAtB,EADgE;WAAN,CAA5D,CARQ;;;AAzBC,iCAsCX,uCAAc,UAAU;AACtB,eAAK,OAAL,GADsB;;;eAtCb;;;;iBAEU","file":"autocomplete/autocomplete.js","sourceRoot":"/source/","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {fireEvent} from '../common/events';\r\n\r\n@customAttribute('md-autocomplete')\r\n@inject(Element)\r\nexport class MdAutoComplete {\r\n  input = null;\r\n  @bindable() values = {};\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  attached() {\r\n    if (this.element.tagName.toLowerCase() === 'input') {\r\n      this.input = this.element;\r\n    } else if (this.element.tagName.toLowerCase() === 'md-input') {\r\n      this.input = this.element.au.controller.viewModel.input;\r\n    } else {\r\n      throw new Error('md-autocomplete must be attached to either an input or md-input element');\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  detached() {\r\n    // remove .autocomplete-content children\n    $(this.input).siblings('.autocomplete-content').off('click');\n    $(this.input).siblings('.autocomplete-content').remove();\n  }\r\n\r\n  refresh() {\r\n    this.detached();\r\n    $(this.input).autocomplete({\r\n      data: this.values\r\n    });\r\n    // $('.autocomplete-content', this.element).on('click', () => {\n    //   fireEvent(this.input, 'change');\n    // });\n    $(this.input).siblings('.autocomplete-content').on('click', () => {\n      fireEvent(this.input, 'change');\n    });\n  }\r\n\r\n  valuesChanged(newValue) {\r\n    this.refresh();\r\n  }\r\n}\r\n"]}