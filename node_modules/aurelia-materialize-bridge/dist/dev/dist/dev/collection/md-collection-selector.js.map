{"version":3,"sources":["collection/md-collection-selector.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;;iCAII,0BAFZ,cAAc,wBAAd,WACA,OAAO,OAAP,WAEE,oBACA,oBACA;AAED,iBALW,eAKX,CAAY,OAAZ,EAAqB;gCALV,iBAKU;;;;;;;;AACnB,eAAK,OAAL,GAAe,OAAf,CADmB;SAArB;;AALW,kCASX,+CAAkB,UAAU;AAC1B,+BAAqB,KAAK,OAAL,EAAc,mBAAnC,EAAwD,EAAE,MAAM,KAAK,IAAL,EAAW,YAAY,KAAK,UAAL,EAAvF,EAD0B;;;AATjB,kCAaX,+CAAkB,UAAU;AAC1B,eAAK,UAAL,GAAkB,6BAA6B,QAA7B,CAAlB,CAD0B;;;eAbjB;;;;;;;iBAEc;;;;;iBACE","file":"collection/md-collection-selector.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { observable } from 'aurelia-binding';\nimport { fireMaterializeEvent } from '../common/events';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customElement('md-collection-selector')\n@inject(Element)\nexport class MdlListSelector {\n  @bindable() item;\n  @bindable() mdDisabled = false;\n  @observable() isSelected = false;\n\n  constructor(element) {\n    this.element = element;\n  }\n\n  isSelectedChanged(newValue) {\n    fireMaterializeEvent(this.element, 'selection-changed', { item: this.item, isSelected: this.isSelected });\n  }\n\n  mdDisabledChanged(newValue) {\n    this.mdDisabled = getBooleanFromAttributeValue(newValue);\n  }\n}\n"]}