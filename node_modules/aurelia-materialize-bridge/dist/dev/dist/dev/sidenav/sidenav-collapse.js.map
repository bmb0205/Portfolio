{"version":3,"sources":["sidenav/sidenav-collapse.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;AACA;;;mCAII,4BAFZ,gBAAgB,qBAAhB,WACA,OAAO,OAAP,EAAgB,eAAhB,WAEE;AACD,iBAFW,iBAEX,CAAY,OAAZ,EAAqB,eAArB,EAAsC;gCAF3B,mBAE2B;;;;AACpC,eAAK,OAAL,GAAe,OAAf,CADoC;AAEpC,eAAK,eAAL,GAAuB,eAAvB,CAFoC;AAGpC,eAAK,GAAL,GAAW,UAAU,qBAAV,CAAX,CAHoC;SAAtC;;AAFW,oCAQX,+BAAW;;;AACT,eAAK,GAAL,CAAS,YAAT,CAAsB,IAAtB,CAA2B,YAAM;;AAI/B,gBAAM,eAAe,MAAK,GAAL,CAAS,OAAT,IAAoB,OAAO,UAAP,GAAoB,GAApB,GAA0B,KAA9C,GAAsD,6BAA6B,MAAK,GAAL,CAAS,cAAT,CAAnF,CAJU;;AAM/B,kBAAK,OAAL,CAAa,YAAb,CAA0B,gBAA1B,EAA4C,MAAK,GAAL,CAAS,SAAT,CAA5C,CAN+B;AAO/B,gBAAI,gBAAgB;AAClB,oBAAM,MAAK,GAAL,CAAS,MAAT,IAAmB,MAAnB;;AAEN,wCAHkB;AAIlB,yBAAW,SAAS,MAAK,GAAL,CAAS,OAAT,EAAkB,EAA3B,CAAX;aAJE,CAP2B;;AAc/B,cAAE,MAAK,OAAL,CAAF,CAAgB,OAAhB,CAAwB,aAAxB,EAd+B;WAAN,CAA3B,CADS;;;AARA,oCA2BX,+BAAW;;eA3BA","file":"sidenav/sidenav-collapse.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { ObserverLocator } from 'aurelia-binding';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\nimport { getLogger } from 'aurelia-logging';\n\n@customAttribute('md-sidenav-collapse')\n@inject(Element, ObserverLocator)\nexport class MdSidenavCollapse {\n  @bindable() ref;\n  constructor(element, observerLocator) {\n    this.element = element;\n    this.observerLocator = observerLocator;\n    this.log = getLogger('md-sidenav-collapse');\n  }\n\n  attached() {\n    this.ref.whenAttached.then(() => {\n      // this.widthSubscription = this.observerLocator.getObserver(this.ref, 'mdWidth').subscribe(this.widthChanged.bind(this));\n      // this.fixedSubscription = this.observerLocator.getObserver(this.ref, 'fixed').subscribe(this.fixedChanged.bind(this));\n\n      const closeOnClick = this.ref.mdFixed && window.innerWidth > 992 ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick);\n\n      this.element.setAttribute('data-activates', this.ref.controlId);\n      let sideNavConfig = {\n        edge: this.ref.mdEdge || 'left',\n        // closeOnClick: (this.ref.mdFixed ? false : getBooleanFromAttributeValue(this.ref.mdCloseOnClick)),\n        closeOnClick,\n        menuWidth: parseInt(this.ref.mdWidth, 10)\n      };\n      // this.log.debug('sideNavConfig:', sideNavConfig);\n      $(this.element).sideNav(sideNavConfig);\n    });\n  }\n\n  detached() {\n    // this.widthSubscription.unsubscribe();\n  }\n\n  // fixedChanged() {\n  //   this.log.debug('fixedChanged');\n  //   $(this.element).sideNav({\n  //     edge: this.ref.edge || 'left',\n  //     closeOnClick: this.ref.closeOnClick,\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\n  //   });\n  // }\n  //\n  // widthChanged() {\n  //   this.log.debug('widthChanged');\n  //   $(this.element).sideNav({\n  //     edge: this.ref.edge || 'left',\n  //     closeOnClick: this.ref.closeOnClick,\n  //     menuWidth: parseInt(this.ref.mdWidth, 10)\n  //   });\n  // }\n}\n"]}