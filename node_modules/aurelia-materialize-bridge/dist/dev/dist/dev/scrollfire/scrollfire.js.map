{"version":3,"sources":["scrollfire/scrollfire.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAS;;AACA;;AACA;;;8BAII,uBAFZ,gBAAgB,eAAhB,WACA,OAAO,OAAP;AAGC,iBAFW,YAEX,CAAY,OAAZ,EAAqB;gCAFV,cAEU;;eADrB,WAAW,EACU;;AACnB,eAAK,OAAL,GAAe,OAAf,CADmB;AAEnB,eAAK,GAAL,GAAW,UAAU,eAAV,CAAX,CAFmB;SAArB;;AAFW,+BAOX,+BAAW;;;AACT,cAAI,UAAU,EAAE,wBAAF,EAA4B,KAAK,OAAL,CAAtC,CADK;AAET,cAAI,QAAQ,MAAR,GAAiB,CAAjB,EAAoB;;AACtB,oBAAK,GAAL,CAAS,KAAT,CAAe,SAAf,EAA0B,OAA1B;AACA,kBAAI,YAAJ;AACA,kBAAI,UAAU,EAAV;AACJ,sBAAQ,IAAR,CAAa,UAAC,CAAD,EAAI,EAAJ,EAAW;AACtB,oBAAI,SAAS,EAAE,EAAF,CAAT,CADkB;AAEtB,oBAAI,CAAC,OAAO,IAAP,CAAY,IAAZ,CAAD,EAAoB;AACtB,yBAAO,IAAP,CAAY,IAAZ,4BAA0C,KAAK,QAAL,EAA1C,EADsB;iBAAxB;AAGA,wBAAQ,IAAR,CAAa;AACX,4BAAU,MAAM,OAAO,IAAP,CAAY,IAAZ,CAAN;AACV,4BAAU,OAAO,GAAP,CAAW,CAAX,EAAc,EAAd,CAAiB,sBAAjB,EAAyC,SAAzC,CAAmD,QAAnD;AACV,0BAAQ,SAAS,OAAO,GAAP,CAAW,CAAX,EAAc,EAAd,CAAiB,sBAAjB,EAAyC,SAAzC,CAAmD,MAAnD,EAA2D,EAApE,CAAR;iBAHF,EALsB;eAAX,CAAb;AAWA,kBAAI,QAAQ,MAAR,GAAiB,CAAjB,EAAoB;AACtB,sBAAK,GAAL,CAAS,KAAT,CAAe,4CAAf,EAA6D,OAA7D,EADsB;AAEtB,4BAAY,UAAZ,CAAuB,OAAvB,EAFsB;eAAxB;iBAfsB;WAAxB;;;eATS","file":"scrollfire/scrollfire.js","sourceRoot":"/source/","sourcesContent":["import { customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { getLogger } from 'aurelia-logging';\n\n@customAttribute('md-scrollfire')\n@inject(Element)\nexport class MdScrollfire {\n  targetId = 0;\n  constructor(element) {\n    this.element = element;\n    this.log = getLogger('md-scrollfire');\n  }\n\n  attached() {\n    let targets = $('[md-scrollfire-target]', this.element);\n    if (targets.length > 0) {\n      this.log.debug('targets', targets);\n      let self = this;\n      let options = [];\n      targets.each((i, el) => {\n        let target = $(el);\n        if (!target.attr('id')) {\n          target.attr('id', `md-scrollfire-target-${self.targetId++}`);\n        }\n        options.push({\n          selector: '#' + target.attr('id'),\n          callback: target.get(0).au['md-scrollfire-target'].viewModel.callback,\n          offset: parseInt(target.get(0).au['md-scrollfire-target'].viewModel.offset, 10)\n        });\n      });\n      if (options.length > 0) {\n        this.log.debug('configuring scrollFire with these options:', options);\n        Materialize.scrollFire(options);\n      }\n    }\n  }\n}\n"]}