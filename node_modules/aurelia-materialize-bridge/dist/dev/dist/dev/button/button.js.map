{"version":3,"sources":["button/button.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAS;AAAU;;AACV;;AACA;;AACA;;;0BAII,mBAFZ,gBAAgB,WAAhB,WACA,OAAO,OAAP,WAEE,oBACA,oBACA,oBACA;AAED,iBANW,QAMX,CAAY,OAAZ,EAAqB;gCANV,UAMU;;;;;;;;;;AACnB,eAAK,gBAAL,GAAwB,IAAI,gBAAJ,CAAqB,OAArB,CAAxB,CADmB;SAArB;;AANW,2BAUX,+BAAW;AACT,cAAI,UAAU,EAAV,CADK;;AAGT,cAAI,6BAA6B,KAAK,IAAL,CAAjC,EAA6C;AAC3C,oBAAQ,IAAR,CAAa,UAAb,EAD2C;WAA7C;AAGA,cAAI,6BAA6B,KAAK,QAAL,CAAjC,EAAiD;AAC/C,oBAAQ,IAAR,CAAa,cAAb,EAD+C;WAAjD;AAGA,cAAI,6BAA6B,KAAK,KAAL,CAAjC,EAA8C;AAC5C,oBAAQ,IAAR,CAAa,WAAb,EAD4C;WAA9C;;AAIA,cAAI,QAAQ,MAAR,KAAmB,CAAnB,EAAsB;AACxB,oBAAQ,IAAR,CAAa,KAAb,EADwB;WAA1B;;AAIA,cAAI,6BAA6B,KAAK,QAAL,CAAjC,EAAiD;AAC/C,oBAAQ,IAAR,CAAa,UAAb,EAD+C;WAAjD;;AAIA,cAAI,CAAC,6BAA6B,KAAK,IAAL,CAA9B,EAA0C;AAC5C,oBAAQ,IAAR,CAAa,QAAb,EAD4C;WAA9C;AAGA,eAAK,gBAAL,CAAsB,UAAtB,CAAiC,OAAjC,EAxBS;;;AAVA,2BAqCX,+BAAW;AACT,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,CAAC,QAAD,EAAW,KAAX,EAAkB,UAAlB,EAA8B,WAA9B,EAA2C,UAA3C,CAApC,EADS;;;AArCA,2BAyCX,2CAAgB,UAAU;AACxB,cAAI,6BAA6B,QAA7B,CAAJ,EAA4C;AAC1C,iBAAK,gBAAL,CAAsB,UAAtB,CAAiC,UAAjC,EAD0C;WAA5C,MAEO;AACL,iBAAK,gBAAL,CAAsB,aAAtB,CAAoC,UAApC,EADK;WAFP;;;AA1CS,2BAiDX,mCAAY,UAAU;AACpB,cAAI,6BAA6B,QAA7B,CAAJ,EAA4C;AAC1C,iBAAK,gBAAL,CAAsB,aAAtB,CAAoC,CAAC,KAAD,EAAQ,QAAR,CAApC,EAD0C;AAE1C,iBAAK,gBAAL,CAAsB,UAAtB,CAAiC,UAAjC,EAF0C;WAA5C,MAGO;AACL,iBAAK,gBAAL,CAAsB,aAAtB,CAAoC,UAApC,EADK;AAEL,iBAAK,gBAAL,CAAsB,UAAtB,CAAiC,CAAC,KAAD,EAAQ,QAAR,CAAjC,EAFK;WAHP;;;eAlDS;;;;iBACY;;;;;iBACJ;;;;;iBACI;;;;;iBACH","file":"button/button.js","sourceRoot":"/source/","sourcesContent":["import { bindable, customAttribute } from 'aurelia-templating';\nimport { inject } from 'aurelia-dependency-injection';\nimport { AttributeManager } from '../common/attributeManager';\nimport { getBooleanFromAttributeValue } from '../common/attributes';\n\n@customAttribute('md-button')\n@inject(Element)\nexport class MdButton {\n  @bindable() disabled = false;\n  @bindable() flat = false;\n  @bindable() floating = false;\n  @bindable() large = false;\n\n  constructor(element) {\n    this.attributeManager = new AttributeManager(element);\n  }\n\n  attached() {\n    let classes = [];\n\n    if (getBooleanFromAttributeValue(this.flat)) {\n      classes.push('btn-flat');\n    }\n    if (getBooleanFromAttributeValue(this.floating)) {\n      classes.push('btn-floating');\n    }\n    if (getBooleanFromAttributeValue(this.large)) {\n      classes.push('btn-large');\n    }\n\n    if (classes.length === 0) {\n      classes.push('btn');\n    }\n\n    if (getBooleanFromAttributeValue(this.disabled)) {\n      classes.push('disabled');\n    }\n\n    if (!getBooleanFromAttributeValue(this.flat)) {\n      classes.push('accent');\n    }\n    this.attributeManager.addClasses(classes);\n  }\n\n  detached() {\n    this.attributeManager.removeClasses(['accent', 'btn', 'btn-flat', 'btn-large', 'disabled']);\n  }\n\n  disabledChanged(newValue) {\n    if (getBooleanFromAttributeValue(newValue)) {\n      this.attributeManager.addClasses('disabled');\n    } else {\n      this.attributeManager.removeClasses('disabled');\n    }\n  }\n\n  flatChanged(newValue) {\n    if (getBooleanFromAttributeValue(newValue)) {\n      this.attributeManager.removeClasses(['btn', 'accent']);\n      this.attributeManager.addClasses('btn-flat');\n    } else {\n      this.attributeManager.removeClasses('btn-flat');\n      this.attributeManager.addClasses(['btn', 'accent']);\n    }\n  }\n}\n"]}