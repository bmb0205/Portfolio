define('app',['exports', 'aurelia-dependency-injection', './settings'], function (exports, _aureliaDependencyInjection, _settings) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.App = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var App = exports.App = (_dec = (0, _aureliaDependencyInjection.inject)(_settings.Settings), _dec(_class = function () {
    function App(settings) {
      _classCallCheck(this, App);

      this.primaryColor = settings.primaryColor;
      this.accentColor = settings.accentColor;
      this.errorColor = settings.errorColor;
    }

    App.prototype.configureRouter = function configureRouter(config, router) {
      config.title = 'Aurelia Materialize Components';

      config.map([{ name: 'about', route: ['', 'about'], moduleId: 'about/about', title: 'About' }, { name: 'project-status', route: 'project-status', moduleId: 'project-status/controls', title: 'Components' }, { name: 'samples', route: ['samples'], moduleId: 'samples/index', title: 'Samples' }]);

      this.router = router;
    };

    return App;
  }()) || _class);
});
define('environment',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    debug: true,
    testing: true
  };
});
define('loading-indicator',['exports', 'aurelia-templating', 'aurelia-dependency-injection', 'aurelia-event-aggregator', 'nprogress'], function (exports, _aureliaTemplating, _aureliaDependencyInjection, _aureliaEventAggregator, _nprogress) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.LoadingIndicator = undefined;

  var _nprogress2 = _interopRequireDefault(_nprogress);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _dec2, _class;

  var LoadingIndicator = exports.LoadingIndicator = (_dec = (0, _aureliaTemplating.noView)(), _dec2 = (0, _aureliaDependencyInjection.inject)(_aureliaEventAggregator.EventAggregator), _dec(_class = _dec2(_class = function () {
    function LoadingIndicator(eventAggregator) {
      _classCallCheck(this, LoadingIndicator);

      eventAggregator.subscribe('router:navigation:processing', this.start);
      eventAggregator.subscribe('router:navigation:complete', this.done);
    }

    LoadingIndicator.prototype.start = function start() {
      _nprogress2.default.start();
      _nprogress2.default.inc();
    };

    LoadingIndicator.prototype.done = function done() {
      _nprogress2.default.done();
    };

    return LoadingIndicator;
  }()) || _class) || _class);
});
define('main',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.configure = configure;
  function configure(aurelia) {
    aurelia.use.standardConfiguration().developmentLogging().plugin('aurelia-materialize-bridge', function (b) {
      return b.useAll();
    }).globalResources('shared/logger');

    if (window.Waves) {
      window.Waves.displayEffect = function () {};
    }

    return aurelia.start().then(function (aurelia) {
      return aurelia.setRoot('app');
    });
  }
});
define('nav-bar',['exports', 'aurelia-framework'], function (exports, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NavBar = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _desc, _value, _class, _descriptor;

  var NavBar = exports.NavBar = (_class = function () {
    function NavBar() {
      _classCallCheck(this, NavBar);

      _initDefineProp(this, 'router', _descriptor, this);
    }

    NavBar.prototype.attached = function attached() {
      $('.button-collapse').sideNav();
    };

    return NavBar;
  }(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'router', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: function initializer() {
      return null;
    }
  })), _class);
});
define('route-highlight',['exports', 'aurelia-framework', 'aurelia-router', 'aurelia-event-aggregator'], function (exports, _aureliaFramework, _aureliaRouter, _aureliaEventAggregator) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.RouteHighlight = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _class, _desc, _value, _class2, _descriptor;

  var RouteHighlight = exports.RouteHighlight = (_dec = (0, _aureliaFramework.inject)(Element, _aureliaRouter.Router, _aureliaEventAggregator.EventAggregator), _dec2 = (0, _aureliaFramework.customAttribute)('route-highlight'), _dec(_class = _dec2(_class = (_class2 = function () {
    function RouteHighlight(element, router, eventAggregator) {
      var _this = this;

      _classCallCheck(this, RouteHighlight);

      _initDefineProp(this, 'routes', _descriptor, this);

      this.element = element;
      this.router = router;
      this.ea = eventAggregator;

      this.subscription = this.ea.subscribe('router:navigation:complete', function () {
        return _this.refresh();
      });
    }

    RouteHighlight.prototype.routesChanged = function routesChanged() {
      this.refresh();
    };

    RouteHighlight.prototype.refresh = function refresh() {
      var instruction = this.router.currentInstruction;
      var isActive = false;

      if (instruction) {
        var activeRoute = instruction.config.name;

        if (Array.isArray(this.routes)) {
          isActive = this.routes.includes(activeRoute);
        } else {
          isActive = this.routes === activeRoute;
        }
      }

      if (isActive) {
        this.highlight();
      } else {
        this.unhighlight();
      }
    };

    RouteHighlight.prototype.highlight = function highlight() {
      this.element.classList.add('active');
    };

    RouteHighlight.prototype.unhighlight = function unhighlight() {
      this.element.classList.remove('active');
    };

    RouteHighlight.prototype.detached = function detached() {
      if (this.subscription) {
        this.subscription();
      }
    };

    return RouteHighlight;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'routes', [_aureliaFramework.bindable], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class) || _class);
});
define('settings',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var Settings = exports.Settings = function Settings() {
    _classCallCheck(this, Settings);

    this.primaryColor = '#ee6e73';
    this.accentColor = '#2bbbad';
    this.errorColor = '#f44336';
    this.gistProxy = 'https://gist-serve.jeroenvinke.nl/';
  };
});
define('about/about',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var About = exports.About = function () {
    function About() {
      _classCallCheck(this, About);

      this.actors = [{
        'name': 'Bryan Cranston',
        'episodes': 62,
        'description': 'Bryan Cranston played the role of Walter in Breaking Bad. He is also known for playing Hal in Malcom in the Middle.',
        'image': 'bryan-cranston.jpg'
      }, {
        'name': 'Aaron Paul',
        'episodes': 62,
        'description': 'Aaron Paul played the role of Jesse in Breaking Bad. He also featured in the "Need For Speed" Movie.',
        'image': 'aaron-paul.jpg'
      }, {
        'name': 'Bob Odenkirk',
        'episodes': 62,
        'description': 'Bob Odenkrik played the role of Saul in Breaking Bad. Due to public fondness for the character, Bob stars in his own show now, called "Better Call Saul".',
        'image': 'bob-odenkirk.jpg'
      }];
    }

    About.prototype.attached = function attached() {
      this.version = '0.20.2';
    };

    About.prototype.onSelectionChanged = function onSelectionChanged(e) {
      var selected = this.list.getSelected();
      var names = selected.map(function (i) {
        return i.name;
      });
      this.logger.log('selection changed: ' + names.join(', '));
    };

    return About;
  }();
});
define('resources/index',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.configure = configure;
  function configure(config) {}
});
define('project-status/controls',['exports', 'aurelia-dependency-injection', '../shared/component-service'], function (exports, _aureliaDependencyInjection, _componentService) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Controls = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var Controls = exports.Controls = (_dec = (0, _aureliaDependencyInjection.inject)(_componentService.ComponentService), _dec(_class = function Controls(componentService) {
    var _this = this;

    _classCallCheck(this, Controls);

    componentService.getIterableComponents().then(function (categories) {
      _this.categories = categories;
    });
  }) || _class);
});
define('samples/index',['exports', 'aurelia-dependency-injection', 'shared/component-service'], function (exports, _aureliaDependencyInjection, _componentService) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Index = undefined;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _dec, _class;

  var Index = exports.Index = (_dec = (0, _aureliaDependencyInjection.inject)(_componentService.ComponentService), _dec(_class = function () {
    function Index(componentService) {
      _classCallCheck(this, Index);

      this.componentService = componentService;
    }

    Index.prototype.configureRouter = function configureRouter(config, router) {
      var _this = this;

      return this.componentService.getRouterConfig().then(function (routes) {
        config.map(routes);
        _this.router = router;
      });
    };

    return Index;
  }()) || _class);
});
define('samples/menu',['exports', 'aurelia-templating', 'aurelia-event-aggregator', 'aurelia-dependency-injection', '../shared/component-service', 'aurelia-logging', 'aurelia-framework'], function (exports, _aureliaTemplating, _aureliaEventAggregator, _aureliaDependencyInjection, _componentService, _aureliaLogging, _aureliaFramework) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Menu = undefined;

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _class, _desc, _value, _class2, _descriptor;

  var Menu = exports.Menu = (_dec = (0, _aureliaDependencyInjection.inject)(Element, _componentService.ComponentService, _aureliaEventAggregator.EventAggregator, _aureliaFramework.TaskQueue), _dec2 = (0, _aureliaTemplating.bindable)(), _dec(_class = (_class2 = function () {
    function Menu(element, componentService, eventAggregator, taskQueue) {
      var _this = this;

      _classCallCheck(this, Menu);

      _initDefineProp(this, 'activeItem', _descriptor, this);

      this.subscriptions = [];

      this.componentService = componentService;
      this.element = element;
      this.taskQueue = taskQueue;
      this.subscriptions.push(eventAggregator.subscribe('router:navigation:complete', function (e) {
        return _this.routeChanged(e);
      }));
      this.log = (0, _aureliaLogging.getLogger)('menu');
    }

    Menu.prototype.attached = function attached() {
      var _this2 = this;

      this.componentService.getIterableComponents(true).then(function (categories) {
        _this2.categories = categories;
      });
    };

    Menu.prototype.setActive = function setActive(ctrl) {
      this.activeItem = ctrl.link;
      return true;
    };

    Menu.prototype.activeItemChanged = function activeItemChanged(newValue, oldValue) {
      var _this3 = this;

      this.taskQueue.queueTask(function () {
        _this3.log.debug('activeItemChanged', newValue, oldValue);

        var header = $('li.active', _this3.element).parents('.collapsible-body').siblings('.collapsible-header');
        if (header.length > 0) {
          header.addClass('active');
          header.parents('[md-collapsible]').get(0).au['md-collapsible'].viewModel.refresh();
        } else {
          _this3.log.warn('activeItemChanged', 'header not found');
        }
      });
    };

    Menu.prototype.routeChanged = function routeChanged(e) {
      this.log.debug('routeChanged', e);
      var link = '#' + e.instruction.fragment;
      this.activeItem = link.split('/').splice(0, 3).join('/');
    };

    Menu.prototype.detached = function detached() {
      this.subscriptions.forEach(function (i) {
        return i.dispose();
      });
    };

    return Menu;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'activeItem', [_dec2], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class);
});
define('samples/sample-runner',['exports', 'aurelia-dependency-injection', 'aurelia-http-client', 'aurelia-router', 'aurelia-task-queue', 'aurelia-templating', 'aurelia-logging', '../settings'], function (exports, _aureliaDependencyInjection, _aureliaHttpClient, _aureliaRouter, _aureliaTaskQueue, _aureliaTemplating, _aureliaLogging, _settings) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.SampleRunner = undefined;

  var LogManager = _interopRequireWildcard(_aureliaLogging);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  function _initDefineProp(target, property, descriptor, context) {
    if (!descriptor) return;
    Object.defineProperty(target, property, {
      enumerable: descriptor.enumerable,
      configurable: descriptor.configurable,
      writable: descriptor.writable,
      value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
    });
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
      desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
      desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
      Object['define' + 'Property'](target, property, desc);
      desc = null;
    }

    return desc;
  }

  function _initializerWarningHelper(descriptor, context) {
    throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
  }

  var _dec, _dec2, _class, _desc, _value, _class2, _descriptor;

  var SampleRunner = exports.SampleRunner = (_dec = (0, _aureliaDependencyInjection.inject)(_settings.Settings, _aureliaTemplating.TemplatingEngine, _aureliaTemplating.ViewResources, _aureliaTaskQueue.TaskQueue, _aureliaHttpClient.HttpClient), _dec2 = (0, _aureliaTemplating.bindable)(), _dec(_class = (_class2 = function () {
    function SampleRunner(settings, templatingEngine, viewResources, taskQueue, http) {
      _classCallCheck(this, SampleRunner);

      _initDefineProp(this, 'router', _descriptor, this);

      this.loading = true;
      this.tabs = [];

      this.log = LogManager.getLogger('sample-runner');
      this.settings = settings;
      this.templatingEngine = templatingEngine;
      this.viewResources = viewResources;
      this.taskQueue = taskQueue;
      this.http = http;
    }

    SampleRunner.prototype.activate = function activate(params, route) {
      var sample = route.navModel.config.sample;
      var category = route.navModel.config.category;
      this.router = route.navModel.router;
      this.routes = this.router.routes.filter(function (r) {
        return r.category === category;
      });
      this.log.debug('activate sample', sample);
      this.log.debug('activate router', this.router);
      this.log.debug('activate route', route);
      this.log.debug('activate routes', this.routes);

      var cacheBust = Math.floor(Math.random() * 100000 + 1);
      sample.path = this.settings.gistProxy + 'file-cache-bust/' + cacheBust + '/' + sample.gist + '/app';
      this.sample = sample;
      this.category = category;
      this.title = route.title;
    };

    SampleRunner.prototype.attached = function attached() {
      var _this = this;

      this.http.get(this.settings.gistProxy + 'files/' + this.sample.gist).then(function (response) {
        var files = response.content;
        _this.sample.files = files;
        _this.updateTabs(files);
      });
      return new Promise(function (resolve) {
        var viewModel = _this.sample.path + '.js';
        var view = _this.sample.path + '.html';
        _this.sampleTarget.innerHTML = '<compose view-model.bind="' + viewModel + '" view.bind="' + view + '" compose.ref="composeVM"></compose>';
        _this.instruction = _this.templatingEngine.enhance({ element: _this.sampleTarget, bindingContext: _this, overrideContext: _this, resources: _this.viewResources });
        _this.instruction.attached();
        resolve();
      }).delay(500).then(function () {
        return _this.loading = false;
      });
    };

    SampleRunner.prototype.detached = function detached() {
      this.instruction.unbind();
      this.instruction.detached();
      this.sample = undefined;
    };

    SampleRunner.prototype.determineActivationStrategy = function determineActivationStrategy() {
      return _aureliaRouter.activationStrategy.replace;
    };

    SampleRunner.prototype.updateTabs = function updateTabs(files) {
      var keys = Object.keys(files);

      for (var i = 0; i < keys.length; i++) {
        var fileName = keys[i];
        var language = void 0;

        var split = fileName.split('.');
        var ext = split[split.length - 1];
        switch (ext) {
          default:
          case 'html':
            language = 'html';
            break;
          case 'js':
            language = 'javascript';
            break;
          case 'css':
            language = 'css';
            break;
          case 'md':
            language = 'markdown';
            break;
        }

        this.tabs.push({
          title: keys[i],
          language: language,
          filename: keys[i]
        });
      }
    };

    SampleRunner.prototype.getSampleFile = function getSampleFile(filename) {
      return this.sample.files[filename].content;
    };

    return SampleRunner;
  }(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'router', [_dec2], {
    enumerable: true,
    initializer: null
  })), _class2)) || _class);
});
define('shared/component-service',['exports', 'aurelia-logging'], function (exports, _aureliaLogging) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ComponentService = undefined;

  var LogManager = _interopRequireWildcard(_aureliaLogging);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var ComponentService = exports.ComponentService = function () {
    ComponentService.importJson = function importJson(filepath) {
      return new Promise(function (resolve) {
        require(['text!' + filepath], function (res) {
          resolve(JSON.parse(res));
        });
      });
    };

    function ComponentService() {
      var _this = this;

      _classCallCheck(this, ComponentService);

      this.importJsonPromise = null;

      this.importJsonPromise = ComponentService.importJson('shared/components.json').then(function (components) {
        _this.components = components;
      });
      this.log = LogManager.getLogger('ComponentService');
    }

    ComponentService.prototype.getIterableComponents = function getIterableComponents() {
      var _this2 = this;

      var hideEmptyCategories = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      return this.importJsonPromise.then(function (components) {
        var categories = [];
        Object.keys(_this2.components).forEach(function (cat) {
          if (cat !== 'default') {
            (function () {
              var category = {
                title: cat,
                controls: []
              };
              var cfg = _this2.components[cat];
              Object.keys(cfg).forEach(function (title) {
                var ctrl = {
                  title: title,
                  status: cfg[title].status
                };
                if (cfg[title].status && cfg[title].nav !== false) {
                  ctrl.link = '#/samples/' + (cfg[title].moduleId || title.toLowerCase());
                }
                category.controls.push(ctrl);
              });
              if (!hideEmptyCategories || category.controls.some(function (c) {
                return !!c.link;
              })) {
                categories.push(category);
              }
            })();
          }
        });
        return categories;
      });
    };

    ComponentService.prototype.getRouterConfig = function getRouterConfig() {
      var _this3 = this;

      return this.importJsonPromise.then(function (components) {
        var routes = [];
        Object.keys(_this3.components).forEach(function (category) {
          var cfg = _this3.components[category];
          Object.keys(cfg).forEach(function (title) {
            var component = cfg[title];
            if (component.status && component.nav !== false) {
              (function () {
                var shortModuleId = component.moduleId || title.toLowerCase();
                var moduleId = 'samples/' + shortModuleId + '/index';

                if (component.samples) {
                  var keys = Object.keys(component.samples);
                  keys.forEach(function (key) {
                    var sample = component.samples[key];
                    sample = _this3.normalizeSample(key, sample);
                    var route = {
                      name: shortModuleId + '-' + key,
                      route: shortModuleId + '-' + key,
                      moduleId: './sample-runner',
                      title: sample.title,
                      sample: sample,
                      category: category,
                      nav: true
                    };
                    _this3.log.debug('added route', route);
                    routes.push(route);

                    if (sample.default) {
                      route = {
                        name: shortModuleId,
                        route: shortModuleId,
                        redirect: route.route
                      };
                      _this3.log.debug('added default route', route);
                      routes.push(route);
                    }
                  });
                } else {
                  _this3.log.warn('DEPRECATED: component route has no gist:', title, component);
                  routes.push({ name: shortModuleId, route: shortModuleId, moduleId: moduleId, title: title });
                }
              })();
            }
          });
        });
        return routes;
      });
    };

    ComponentService.prototype.normalizeSample = function normalizeSample(name, sample) {
      if ((typeof sample === 'undefined' ? 'undefined' : _typeof(sample)) !== 'object') {
        sample = {
          gist: sample
        };
      }
      if (!sample.title) {
        sample.title = name.replace(/-/g, ' ');
        sample.title = sample.title.charAt(0).toUpperCase() + sample.title.slice(1);
      }
      return sample;
    };

    return ComponentService;
  }();
});
define('shared/logger',['exports'], function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var Logger = exports.Logger = function () {
    function Logger() {
      _classCallCheck(this, Logger);
    }

    Logger.prototype.attached = function attached() {
      this.overrideStyles();
    };

    Logger.prototype.log = function log(message, isError, container) {
      var lastContainer = $('.console div:first', container);
      var counter = lastContainer.find('.count').detach();
      var lastMessage = lastContainer.text();
      var count = 1 * (counter.text() || 1);

      lastContainer.append(counter);

      if (!lastContainer.length || message !== lastMessage) {
        $('<div' + (isError ? ' class=\'error\'' : '') + '/>').css({
          marginTop: -24,
          backgroundColor: isError ? '#ffbbbb' : '#b2ebf2'
        }).html(message).prependTo($('.console', container)).animate({ marginTop: 0 }, 300).animate({ backgroundColor: isError ? '#ffdddd' : '#ffffff' }, 800);
      } else {
        count++;

        if (counter.length) {
          counter.html(count);
        } else {
          lastContainer.html(lastMessage).append('<span class=\'count\'>' + count + '</span>');
        }
      }
    };

    Logger.prototype.error = function error(message) {
      this.log(message, true);
    };

    Logger.prototype.overrideStyles = function overrideStyles() {
      jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function (i, attr) {
        jQuery.fx.step[attr] = function (fx) {
          if (!fx.state || _typeof(fx.end) === _typeof('')) {
            fx.start = getColor(fx.elem, attr);
            fx.end = getRGB(fx.end);
          }

          fx.elem.style[attr] = ['rgb(', [Math.max(Math.min(parseInt(fx.pos * (fx.end[0] - fx.start[0]) + fx.start[0], 10), 255), 0), Math.max(Math.min(parseInt(fx.pos * (fx.end[1] - fx.start[1]) + fx.start[1], 10), 255), 0), Math.max(Math.min(parseInt(fx.pos * (fx.end[2] - fx.start[2]) + fx.start[2], 10), 255), 0)].join(','), ')'].join('');
        };
      });
    };

    return Logger;
  }();

  function getRGB(color) {
    var result = void 0;

    if (color && color.constructor === Array && color.length === 3) {
      return color;
    }

    result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color);
    if (result) {
      return [parseInt(result[1], 10), parseInt(result[2], 10), parseInt(result[3], 10)];
    }

    result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color);
    if (result) {
      return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];
    }

    return jQuery.trim(color).toLowerCase();
  }

  function getColor(elem, attr) {
    var color = void 0;

    do {
      color = jQuery.css(elem, attr);

      if (color && color !== 'transparent' || jQuery.nodeName(elem, 'body')) {
        break;
      }

      attr = 'backgroundColor';

      elem = elem.parentNode;
    } while (elem);

    return getRGB(color);
  }
});
define('aurelia-http-client/aurelia-http-client',['exports', 'aurelia-path', 'aurelia-pal'], function (exports, _aureliaPath, _aureliaPal) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.HttpClient = exports.RequestBuilder = exports.HttpRequestMessage = exports.JSONPRequestMessage = exports.RequestMessageProcessor = exports.mimeTypes = exports.HttpResponseMessage = exports.RequestMessage = exports.Headers = undefined;
  exports.timeoutTransformer = timeoutTransformer;
  exports.callbackParameterNameTransformer = callbackParameterNameTransformer;
  exports.credentialsTransformer = credentialsTransformer;
  exports.progressTransformer = progressTransformer;
  exports.responseTypeTransformer = responseTypeTransformer;
  exports.headerTransformer = headerTransformer;
  exports.contentTransformer = contentTransformer;
  exports.createJSONPRequestMessageProcessor = createJSONPRequestMessageProcessor;
  exports.createHttpRequestMessageProcessor = createHttpRequestMessageProcessor;

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  

  var Headers = exports.Headers = function () {
    function Headers() {
      var headers = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

      

      this.headers = {};

      for (var _key in headers) {
        this.headers[_key.toLowerCase()] = { key: _key, value: headers[_key] };
      }
    }

    Headers.prototype.add = function add(key, value) {
      this.headers[key.toLowerCase()] = { key: key, value: value };
    };

    Headers.prototype.get = function get(key) {
      var header = this.headers[key.toLowerCase()];
      return header ? header.value : undefined;
    };

    Headers.prototype.clear = function clear() {
      this.headers = {};
    };

    Headers.prototype.has = function has(header) {
      return this.headers.hasOwnProperty(header.toLowerCase());
    };

    Headers.prototype.configureXHR = function configureXHR(xhr) {
      for (var name in this.headers) {
        if (this.headers.hasOwnProperty(name)) {
          xhr.setRequestHeader(this.headers[name].key, this.headers[name].value);
        }
      }
    };

    Headers.parse = function parse(headerStr) {
      var headers = new Headers();
      if (!headerStr) {
        return headers;
      }

      var headerPairs = headerStr.split('\r\n');
      for (var i = 0; i < headerPairs.length; i++) {
        var headerPair = headerPairs[i];

        var index = headerPair.indexOf(': ');
        if (index > 0) {
          var _key2 = headerPair.substring(0, index);
          var val = headerPair.substring(index + 2);
          headers.add(_key2, val);
        }
      }

      return headers;
    };

    return Headers;
  }();

  var RequestMessage = exports.RequestMessage = function () {
    function RequestMessage(method, url, content, headers) {
      

      this.method = method;
      this.url = url;
      this.content = content;
      this.headers = headers || new Headers();
      this.baseUrl = '';
    }

    RequestMessage.prototype.buildFullUrl = function buildFullUrl() {
      var absoluteUrl = /^([a-z][a-z0-9+\-.]*:)?\/\//i;
      var url = absoluteUrl.test(this.url) ? this.url : (0, _aureliaPath.join)(this.baseUrl, this.url);

      if (this.params) {
        var qs = (0, _aureliaPath.buildQueryString)(this.params);
        url = qs ? url + (this.url.indexOf('?') < 0 ? '?' : '&') + qs : url;
      }

      return url;
    };

    return RequestMessage;
  }();

  var HttpResponseMessage = exports.HttpResponseMessage = function () {
    function HttpResponseMessage(requestMessage, xhr, responseType, reviver) {
      

      this.requestMessage = requestMessage;
      this.statusCode = xhr.status;
      this.response = xhr.response || xhr.responseText;
      this.isSuccess = xhr.status >= 200 && xhr.status < 400;
      this.statusText = xhr.statusText;
      this.reviver = reviver;
      this.mimeType = null;

      if (xhr.getAllResponseHeaders) {
        try {
          this.headers = Headers.parse(xhr.getAllResponseHeaders());
        } catch (err) {
          if (xhr.requestHeaders) this.headers = new Headers(xhr.requestHeaders);
        }
      } else {
        this.headers = new Headers();
      }

      var contentType = void 0;

      if (this.headers && this.headers.headers) {
        contentType = this.headers.get('Content-Type');
      }

      if (contentType) {
        this.mimeType = responseType = contentType.split(';')[0].trim();
        if (mimeTypes.hasOwnProperty(this.mimeType)) responseType = mimeTypes[this.mimeType];
      }

      this.responseType = responseType;
    }

    _createClass(HttpResponseMessage, [{
      key: 'content',
      get: function get() {
        try {
          if (this._content !== undefined) {
            return this._content;
          }

          if (this.response === undefined || this.response === null || this.response === '') {
            this._content = this.response;
            return this._content;
          }

          if (this.responseType === 'json') {
            this._content = JSON.parse(this.response, this.reviver);
            return this._content;
          }

          if (this.reviver) {
            this._content = this.reviver(this.response);
            return this._content;
          }

          this._content = this.response;
          return this._content;
        } catch (e) {
          if (this.isSuccess) {
            throw e;
          }

          this._content = null;
          return this._content;
        }
      }
    }]);

    return HttpResponseMessage;
  }();

  var mimeTypes = exports.mimeTypes = {
    'text/html': 'html',
    'text/javascript': 'js',
    'application/javascript': 'js',
    'text/json': 'json',
    'application/json': 'json',
    'application/rss+xml': 'rss',
    'application/atom+xml': 'atom',
    'application/xhtml+xml': 'xhtml',
    'text/markdown': 'md',
    'text/xml': 'xml',
    'text/mathml': 'mml',
    'application/xml': 'xml',
    'text/yml': 'yml',
    'text/csv': 'csv',
    'text/css': 'css',
    'text/less': 'less',
    'text/stylus': 'styl',
    'text/scss': 'scss',
    'text/sass': 'sass',
    'text/plain': 'txt'
  };

  function applyXhrTransformers(xhrTransformers, client, processor, message, xhr) {
    var i = void 0;
    var ii = void 0;

    for (i = 0, ii = xhrTransformers.length; i < ii; ++i) {
      xhrTransformers[i](client, processor, message, xhr);
    }
  }

  var RequestMessageProcessor = exports.RequestMessageProcessor = function () {
    function RequestMessageProcessor(xhrType, xhrTransformers) {
      

      this.XHRType = xhrType;
      this.xhrTransformers = xhrTransformers;
      this.isAborted = false;
    }

    RequestMessageProcessor.prototype.abort = function abort() {
      if (this.xhr && this.xhr.readyState !== _aureliaPal.PLATFORM.XMLHttpRequest.UNSENT) {
        this.xhr.abort();
      }

      this.isAborted = true;
    };

    RequestMessageProcessor.prototype.process = function process(client, requestMessage) {
      var _this = this;

      var promise = new Promise(function (resolve, reject) {
        var xhr = _this.xhr = new _this.XHRType();

        xhr.onload = function (e) {
          var response = new HttpResponseMessage(requestMessage, xhr, requestMessage.responseType, requestMessage.reviver);
          if (response.isSuccess) {
            resolve(response);
          } else {
            reject(response);
          }
        };

        xhr.ontimeout = function (e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'timeout'));
        };

        xhr.onerror = function (e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'error'));
        };

        xhr.onabort = function (e) {
          reject(new HttpResponseMessage(requestMessage, {
            response: e,
            status: xhr.status,
            statusText: xhr.statusText
          }, 'abort'));
        };
      });

      return Promise.resolve(requestMessage).then(function (message) {
        var processRequest = function processRequest() {
          if (_this.isAborted) {
            _this.xhr.abort();
          } else {
            _this.xhr.open(message.method, message.buildFullUrl(), true, message.user, message.password);
            applyXhrTransformers(_this.xhrTransformers, client, _this, message, _this.xhr);
            if (typeof message.content === 'undefined') {
              _this.xhr.send();
            } else {
              _this.xhr.send(message.content);
            }
          }

          return promise;
        };

        var chain = [[processRequest, undefined]];

        var interceptors = message.interceptors || [];
        interceptors.forEach(function (interceptor) {
          if (interceptor.request || interceptor.requestError) {
            chain.unshift([interceptor.request ? interceptor.request.bind(interceptor) : undefined, interceptor.requestError ? interceptor.requestError.bind(interceptor) : undefined]);
          }

          if (interceptor.response || interceptor.responseError) {
            chain.push([interceptor.response ? interceptor.response.bind(interceptor) : undefined, interceptor.responseError ? interceptor.responseError.bind(interceptor) : undefined]);
          }
        });

        var interceptorsPromise = Promise.resolve(message);

        while (chain.length) {
          var _interceptorsPromise;

          interceptorsPromise = (_interceptorsPromise = interceptorsPromise).then.apply(_interceptorsPromise, chain.shift());
        }

        return interceptorsPromise;
      });
    };

    return RequestMessageProcessor;
  }();

  function timeoutTransformer(client, processor, message, xhr) {
    if (message.timeout !== undefined) {
      xhr.timeout = message.timeout;
    }
  }

  function callbackParameterNameTransformer(client, processor, message, xhr) {
    if (message.callbackParameterName !== undefined) {
      xhr.callbackParameterName = message.callbackParameterName;
    }
  }

  function credentialsTransformer(client, processor, message, xhr) {
    if (message.withCredentials !== undefined) {
      xhr.withCredentials = message.withCredentials;
    }
  }

  function progressTransformer(client, processor, message, xhr) {
    if (message.progressCallback) {
      xhr.upload.onprogress = message.progressCallback;
    }
  }

  function responseTypeTransformer(client, processor, message, xhr) {
    var responseType = message.responseType;

    if (responseType === 'json') {
      responseType = 'text';
    }

    xhr.responseType = responseType;
  }

  function headerTransformer(client, processor, message, xhr) {
    message.headers.configureXHR(xhr);
  }

  function contentTransformer(client, processor, message, xhr) {
    if (message.skipContentProcessing) {
      return;
    }

    if (_aureliaPal.PLATFORM.global.FormData && message.content instanceof FormData) {
      return;
    }

    if (_aureliaPal.PLATFORM.global.Blob && message.content instanceof Blob) {
      return;
    }

    if (_aureliaPal.PLATFORM.global.ArrayBufferView && message.content instanceof ArrayBufferView) {
      return;
    }

    if (message.content instanceof Document) {
      return;
    }

    if (typeof message.content === 'string') {
      return;
    }

    if (message.content === null || message.content === undefined) {
      return;
    }

    message.content = JSON.stringify(message.content, message.replacer);

    if (!message.headers.has('Content-Type')) {
      message.headers.add('Content-Type', 'application/json');
    }
  }

  var JSONPRequestMessage = exports.JSONPRequestMessage = function (_RequestMessage) {
    _inherits(JSONPRequestMessage, _RequestMessage);

    function JSONPRequestMessage(url, callbackParameterName) {
      

      var _this2 = _possibleConstructorReturn(this, _RequestMessage.call(this, 'JSONP', url));

      _this2.responseType = 'jsonp';
      _this2.callbackParameterName = callbackParameterName;
      return _this2;
    }

    return JSONPRequestMessage;
  }(RequestMessage);

  var JSONPXHR = function () {
    function JSONPXHR() {
      
    }

    JSONPXHR.prototype.open = function open(method, url) {
      this.method = method;
      this.url = url;
      this.callbackName = 'jsonp_callback_' + Math.round(100000 * Math.random());
    };

    JSONPXHR.prototype.send = function send() {
      var _this3 = this;

      var url = this.url + (this.url.indexOf('?') >= 0 ? '&' : '?') + encodeURIComponent(this.callbackParameterName) + '=' + this.callbackName;
      var script = _aureliaPal.DOM.createElement('script');

      script.src = url;
      script.onerror = function (e) {
        cleanUp();

        _this3.status = 0;
        _this3.onerror(new Error('error'));
      };

      var cleanUp = function cleanUp() {
        delete _aureliaPal.PLATFORM.global[_this3.callbackName];
        _aureliaPal.DOM.removeNode(script);
      };

      _aureliaPal.PLATFORM.global[this.callbackName] = function (data) {
        cleanUp();

        if (_this3.status === undefined) {
          _this3.status = 200;
          _this3.statusText = 'OK';
          _this3.response = data;
          _this3.onload(_this3);
        }
      };

      _aureliaPal.DOM.appendNode(script);

      if (this.timeout !== undefined) {
        setTimeout(function () {
          if (_this3.status === undefined) {
            _this3.status = 0;
            _this3.ontimeout(new Error('timeout'));
          }
        }, this.timeout);
      }
    };

    JSONPXHR.prototype.abort = function abort() {
      if (this.status === undefined) {
        this.status = 0;
        this.onabort(new Error('abort'));
      }
    };

    JSONPXHR.prototype.setRequestHeader = function setRequestHeader() {};

    return JSONPXHR;
  }();

  function createJSONPRequestMessageProcessor() {
    return new RequestMessageProcessor(JSONPXHR, [timeoutTransformer, callbackParameterNameTransformer]);
  }

  var HttpRequestMessage = exports.HttpRequestMessage = function (_RequestMessage2) {
    _inherits(HttpRequestMessage, _RequestMessage2);

    function HttpRequestMessage(method, url, content, headers) {
      

      var _this4 = _possibleConstructorReturn(this, _RequestMessage2.call(this, method, url, content, headers));

      _this4.responseType = 'json';return _this4;
    }

    return HttpRequestMessage;
  }(RequestMessage);

  function createHttpRequestMessageProcessor() {
    return new RequestMessageProcessor(_aureliaPal.PLATFORM.XMLHttpRequest, [timeoutTransformer, credentialsTransformer, progressTransformer, responseTypeTransformer, contentTransformer, headerTransformer]);
  }

  var RequestBuilder = exports.RequestBuilder = function () {
    function RequestBuilder(client) {
      

      this.client = client;
      this.transformers = client.requestTransformers.slice(0);
      this.useJsonp = false;
    }

    RequestBuilder.prototype.asDelete = function asDelete() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'DELETE';
      });
    };

    RequestBuilder.prototype.asGet = function asGet() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'GET';
      });
    };

    RequestBuilder.prototype.asHead = function asHead() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'HEAD';
      });
    };

    RequestBuilder.prototype.asOptions = function asOptions() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'OPTIONS';
      });
    };

    RequestBuilder.prototype.asPatch = function asPatch() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'PATCH';
      });
    };

    RequestBuilder.prototype.asPost = function asPost() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'POST';
      });
    };

    RequestBuilder.prototype.asPut = function asPut() {
      return this._addTransformer(function (client, processor, message) {
        message.method = 'PUT';
      });
    };

    RequestBuilder.prototype.asJsonp = function asJsonp(callbackParameterName) {
      this.useJsonp = true;
      return this._addTransformer(function (client, processor, message) {
        message.callbackParameterName = callbackParameterName;
      });
    };

    RequestBuilder.prototype.withUrl = function withUrl(url) {
      return this._addTransformer(function (client, processor, message) {
        message.url = url;
      });
    };

    RequestBuilder.prototype.withContent = function withContent(content) {
      return this._addTransformer(function (client, processor, message) {
        message.content = content;
      });
    };

    RequestBuilder.prototype.withBaseUrl = function withBaseUrl(baseUrl) {
      return this._addTransformer(function (client, processor, message) {
        message.baseUrl = baseUrl;
      });
    };

    RequestBuilder.prototype.withParams = function withParams(params) {
      return this._addTransformer(function (client, processor, message) {
        message.params = params;
      });
    };

    RequestBuilder.prototype.withResponseType = function withResponseType(responseType) {
      return this._addTransformer(function (client, processor, message) {
        message.responseType = responseType;
      });
    };

    RequestBuilder.prototype.withTimeout = function withTimeout(timeout) {
      return this._addTransformer(function (client, processor, message) {
        message.timeout = timeout;
      });
    };

    RequestBuilder.prototype.withHeader = function withHeader(key, value) {
      return this._addTransformer(function (client, processor, message) {
        message.headers.add(key, value);
      });
    };

    RequestBuilder.prototype.withCredentials = function withCredentials(value) {
      return this._addTransformer(function (client, processor, message) {
        message.withCredentials = value;
      });
    };

    RequestBuilder.prototype.withLogin = function withLogin(user, password) {
      return this._addTransformer(function (client, processor, message) {
        message.user = user;message.password = password;
      });
    };

    RequestBuilder.prototype.withReviver = function withReviver(reviver) {
      return this._addTransformer(function (client, processor, message) {
        message.reviver = reviver;
      });
    };

    RequestBuilder.prototype.withReplacer = function withReplacer(replacer) {
      return this._addTransformer(function (client, processor, message) {
        message.replacer = replacer;
      });
    };

    RequestBuilder.prototype.withProgressCallback = function withProgressCallback(progressCallback) {
      return this._addTransformer(function (client, processor, message) {
        message.progressCallback = progressCallback;
      });
    };

    RequestBuilder.prototype.withCallbackParameterName = function withCallbackParameterName(callbackParameterName) {
      return this._addTransformer(function (client, processor, message) {
        message.callbackParameterName = callbackParameterName;
      });
    };

    RequestBuilder.prototype.withInterceptor = function withInterceptor(interceptor) {
      return this._addTransformer(function (client, processor, message) {
        message.interceptors = message.interceptors || [];
        message.interceptors.unshift(interceptor);
      });
    };

    RequestBuilder.prototype.skipContentProcessing = function skipContentProcessing() {
      return this._addTransformer(function (client, processor, message) {
        message.skipContentProcessing = true;
      });
    };

    RequestBuilder.prototype._addTransformer = function _addTransformer(fn) {
      this.transformers.push(fn);
      return this;
    };

    RequestBuilder.addHelper = function addHelper(name, fn) {
      RequestBuilder.prototype[name] = function () {
        return this._addTransformer(fn.apply(this, arguments));
      };
    };

    RequestBuilder.prototype.send = function send() {
      var message = this.useJsonp ? new JSONPRequestMessage() : new HttpRequestMessage();
      return this.client.send(message, this.transformers);
    };

    return RequestBuilder;
  }();

  function trackRequestStart(client, processor) {
    client.pendingRequests.push(processor);
    client.isRequesting = true;
  }

  function trackRequestEnd(client, processor) {
    var index = client.pendingRequests.indexOf(processor);

    client.pendingRequests.splice(index, 1);
    client.isRequesting = client.pendingRequests.length > 0;

    if (!client.isRequesting) {
      (function () {
        var evt = _aureliaPal.DOM.createCustomEvent('aurelia-http-client-requests-drained', { bubbles: true, cancelable: true });
        setTimeout(function () {
          return _aureliaPal.DOM.dispatchEvent(evt);
        }, 1);
      })();
    }
  }

  var HttpClient = exports.HttpClient = function () {
    function HttpClient() {
      

      this.isRequesting = false;

      this.requestTransformers = [];
      this.requestProcessorFactories = new Map();
      this.requestProcessorFactories.set(HttpRequestMessage, createHttpRequestMessageProcessor);
      this.requestProcessorFactories.set(JSONPRequestMessage, createJSONPRequestMessageProcessor);
      this.pendingRequests = [];
    }

    HttpClient.prototype.configure = function configure(fn) {
      var builder = new RequestBuilder(this);
      fn(builder);
      this.requestTransformers = builder.transformers;
      return this;
    };

    HttpClient.prototype.createRequest = function createRequest(url) {
      var builder = new RequestBuilder(this);

      if (url) {
        builder.withUrl(url);
      }

      return builder;
    };

    HttpClient.prototype.send = function send(requestMessage, transformers) {
      var _this5 = this;

      var createProcessor = this.requestProcessorFactories.get(requestMessage.constructor);
      var processor = void 0;
      var promise = void 0;
      var i = void 0;
      var ii = void 0;

      if (!createProcessor) {
        throw new Error('No request message processor factory for ' + requestMessage.constructor + '.');
      }

      processor = createProcessor();
      trackRequestStart(this, processor);

      transformers = transformers || this.requestTransformers;

      promise = Promise.resolve(requestMessage).then(function (message) {
        for (i = 0, ii = transformers.length; i < ii; ++i) {
          transformers[i](_this5, processor, message);
        }

        return processor.process(_this5, message).then(function (response) {
          trackRequestEnd(_this5, processor);
          return response;
        }).catch(function (response) {
          trackRequestEnd(_this5, processor);
          throw response;
        });
      });

      promise.abort = promise.cancel = function () {
        processor.abort();
      };

      return promise;
    };

    HttpClient.prototype.delete = function _delete(url) {
      return this.createRequest(url).asDelete().send();
    };

    HttpClient.prototype.get = function get(url) {
      return this.createRequest(url).asGet().send();
    };

    HttpClient.prototype.head = function head(url) {
      return this.createRequest(url).asHead().send();
    };

    HttpClient.prototype.jsonp = function jsonp(url) {
      var callbackParameterName = arguments.length <= 1 || arguments[1] === undefined ? 'jsoncallback' : arguments[1];

      return this.createRequest(url).asJsonp(callbackParameterName).send();
    };

    HttpClient.prototype.options = function options(url) {
      return this.createRequest(url).asOptions().send();
    };

    HttpClient.prototype.put = function put(url, content) {
      return this.createRequest(url).asPut().withContent(content).send();
    };

    HttpClient.prototype.patch = function patch(url, content) {
      return this.createRequest(url).asPatch().withContent(content).send();
    };

    HttpClient.prototype.post = function post(url, content) {
      return this.createRequest(url).asPost().withContent(content).send();
    };

    return HttpClient;
  }();
});
define('text!app-colors.html', ['module'], function(module) { module.exports = "<template bindable=\"primaryColor, accentColor\">\n  <style>\n    #nprogress .bar {\n      background: ${accentColor};\n    }\n    #nprogress .peg {\n      box-shadow: 0 0 10px ${accentColor}, 0 0 5px ${accentColor};\n    }\n    #nprogress .spinner-icon {\n      border-top-color: ${accentColor};\n      border-left-color: ${accentColor};\n    }\n  </style>\n</template>\n"; });
define('text!project-status/controls.css', ['module'], function(module) { module.exports = ".control-info.wip {\n  background: url('../images/orange.png') left center no-repeat;\n}\n\n.control-info.done {\n  background: url('../images/blue.png') left center no-repeat;\n}\n\n.control-info {\n  padding-left: 15px;\n}\n"; });
define('text!app.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"materialize-css/css/materialize.css\"></require>\n  <require from=\"./loading-indicator\"></require>\n  <require from='./nav-bar'></require>\n  <require from=\"./color-switcher.html\"></require>\n  <require from=\"./app-colors.html\"></require>\n  <md-colors md-primary-color.bind=\"primaryColor\" md-accent-color.bind=\"accentColor\" md-error-color.bind=\"errorColor\"></md-colors>\n  <app-colors primary-color.bind=\"primaryColor\" accent-color.bind=\"accentColor\"></app-colors>\n  <loading-indicator></loading-indicator>\n  <header>\n    <nav-bar router.bind=\"router\"></nav-bar>\n  </header>\n    <main>\n\n      <div class=\"row\">\n        <div class=\"col s12 m3\">\n          <color-switcher primary-color.two-way=\"primaryColor\" accent-color.two-way=\"accentColor\" error-color.two-way=\"errorColor\"></color-switcher>\n        </div>\n      </div>\n\n      <div class=\"page-host\">\n        <router-view></router-view>\n      </div>\n    </main>\n    <footer>\n      <!-- placeholder footer -->\n    </footer>\n</template>\n"; });
define('text!samples/menu.css', ['module'], function(module) { module.exports = "menu md-sidenav .side-nav.fixed {\n  overflow: hidden;\n}\n\nmenu md-sidenav .side-nav.fixed:hover {\n  overflow: auto;\n}\n"; });
define('text!color-switcher.html', ['module'], function(module) { module.exports = "<template bindable=\"primaryColor, accentColor, errorColor\">\n  <ul md-collapsible>\n    <li>\n      <div class=\"collapsible-header\">\n        <i class=\"material-icons left\">arrow_drop_down</i>Color switcher\n      </div>\n      <div class=\"collapsible-body\" style=\"padding: 10px;\">\n        primary color:\n        <select md-select value.two-way=\"primaryColor\">\n          <option value=\"#ee6e73\">[Materialize] red</option>\n          <option value=\"#3f51b5\">[Paper] indigo</option>\n          <option value=\"#00bcd4\">[Material-UI] light blue</option>\n          <option value=\"#78909C\">[MuiCss] blue grey</option>\n          <option value=\"#4caf50\">green</option>\n          <option value=\"#ff9800\">orange</option>\n        </select>\n\n        accent color:\n        <select md-select value.two-way=\"accentColor\">\n          <option value=\"#009688\">[Materialize] teal</option>\n          <option value=\"#e91e63\">[Paper] pink</option>\n          <option value=\"#ff4081\">[Material-UI] pink</option>\n          <option value=\"#FF80AB\">[MuiCss] another pink</option>\n          <option value=\"#4caf50\">green</option>\n          <option value=\"#ff9800\">orange</option>\n        </select>\n\n        error color:\n        <select md-select value.two-way=\"errorColor\">\n          <option value=\"#f44336\">[default] red</option>\n          <option value=\"#D50000\">[Paper] red</option>\n          <option value=\"#4caf50\">[confusing] green</option>\n          <option value=\"#ff9800\">orange</option>\n        </select>\n      </div>\n    </li>\n  </ul>\n</template>\n"; });
define('text!samples/sample-runner.css', ['module'], function(module) { module.exports = ".sample-runner md-card {\n  position: relative;\n}\n\n.sample-runner md-card .md-catalog__play-button {\n  position: absolute;\n  display: inline-block;\n  right: 24px;\n  top: 10px;\n}\n\n.sample-runner md-card .md-catalog__play-button i {\n  color: black;\n}\n"; });
define('text!nav-bar.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"./route-highlight\"></require>\n\n  <style>\n    .side-nav .li[md-waves] {\n      display: block;\n    }\n  </style>\n\n  <md-navbar md-fixed=\"true\">\n    <a md-sidenav-collapse=\"ref.bind: sideNav;\" class=\"left hide-on-large-only\" style=\"cursor: pointer; padding: 0 10px;\"><i class=\"material-icons\">menu</i></a>\n    <a href=\"#/samples/navbar\" class=\"brand-logo right\"><span class=\"flow-text\">${router.title}</span></a>\n    <ul id=\"nav-mobile\" class=\"left hide-on-med-and-down\">\n      <li md-waves route-highlight=\"routes: about\">\n        <a route-href=\"route: about\">About</a>\n      </li>\n\n      <li md-waves route-highlight=\"routes: project-status\">\n        <a route-href=\"route: project-status\">Components</a>\n      </li>\n\n      <li md-waves>\n        <a href=\"https://aurelia-ui-toolkits.gitbooks.io/materialize-bridge-docs/content/installation.html\" target=\"_blank\">Installation</a>\n      </li>\n\n      <li md-waves>\n        <a href=\"https://aurelia-ui-toolkits.gitbooks.io/materialize-bridge-docs/content/\" target=\"_blank\">Docs</a>\n      </li>\n\n      <!--<li md-waves route-highlight=\"routes: support\">\n        <a route-href=\"route: support;\">Support</a>\n      </li>-->\n    </ul>\n  </md-navbar>\n  <md-sidenav md-close-on-click=\"true\" view-model.ref=\"sideNav\">\n    <ul>\n      <li md-waves route-highlight=\"routes: about\">\n        <a route-href=\"route: about\">About</a>\n      </li>\n\n      <!--<li md-waves route-highlight=\"routes: installation\">\n        <a href=\"https://aurelia-ui-toolkits.gitbooks.io/materialize-bridge-docs/content/installation.html\" target=\"_blank\">Installation</a>\n      </li>-->\n\n      <li md-waves>\n        <a href=\"https://aurelia-ui-toolkits.gitbooks.io/materialize-bridge-docs/content/\" target=\"_blank\">Docs</a>\n      </li>\n\n      <li md-waves route-highlight=\"routes: project-status\">\n        <a route-href=\"route: project-status\">Components</a>\n      </li>\n\n      <!--<li md-waves route-highlight=\"routes: help\">\n        <a route-href=\"route: help;\">Docs</a>\n      </li>\n\n      <li md-waves route-highlight=\"routes: support\">\n        <a route-href=\"route: support;\">Support</a>\n      </li>-->\n    </ul>\n  </md-sidenav>\n</template>\n"; });
define('text!styles/material-colors.css', ['module'], function(module) { module.exports = ".primary {\n  background-color: #ee6e73;\n  color: white;\n}\n\n.primary-text {\n  background-color: white;\n  color: #ee6e73;\n}\n\n.waves-effect.waves-primary .waves-ripple {\n  background-color: rgba(243, 156, 159, 0.65);\n}\n\n.accent {\n  background-color: #2bbbad;\n  color: white;\n}\n"; });
define('text!about/about.html', ['module'], function(module) { module.exports = "<template>\n  <section class=\"container\">\n    <div class=\"row\">\n      <div class=\"col s12\">\n        <ul md-tabs=\"fixed: true;\">\n          <li><a class=\"active\" href=\"#about\">What is Aurelia Materialize bridge?</a></li>\n          <li><a href=\"#example\">List - example of an Aurelia component</a></li>\n        </ul>\n      </div>\n    </div>\n    <section id=\"about\">\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div style=\"margin:auto;text-align:center\">\n            <h1 class=\"text-lg\">Aurelia Materialize <i>Bridge</i></h1>\n            <h3>Material design HTML5 widgets - enhanced by Aurelia</h3>\n            <span>Version ${version}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col s12 m4\">\n          <a href=\"http://aurelia.io\" target=\"_blank\"><img src=\"../images/aurelia-logo-04.png\" /></a>\n        </div>\n        <div class=\"col s12 m4\">\n          <img src=\"../images/bridge-image-08-low.png\" >\n        </div>\n        <div class=\"col s12 m4 center\">\n          <a href=\"http://www.materializecss.com\" target=\"_blank\"><img src=\"../images/materialize-logo.png\" /></a>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col s12 center\" style=\"padding-top: 20px; padding-bottom:20px\">\n          <ul class=\"features\">\n            <li><h4>We've done the hard work for you</h4></li>\n            <li>Use Materialize components in your Aurelia application <i style=\"text-decoration:underline\">without writing any wrapper code</i></li>\n            <li>Powerful binding expressions <i>directly in your markup</i></li>\n            <li><a href=\"#/project-status\">See the catalog</a> or check out the example in the second tab</li>\n          </ul>\n        </div>\n      </div>\n    </section>\n    <section id=\"example\">\n      <div class=\"row\">\n        <div class=\"col s12\">\n          <div>\n            <h5>Hover over the avatar images to select an actor</h5>\n            <md-collection view-model.ref=\"list\">\n              <md-collection-item repeat.for=\"actor of actors\" class=\"avatar ${ selector.isSelected ? 'selected' : '' }\">\n                <md-collection-selector view-model.ref=\"selector\" item.bind=\"actor\" md-on-selection-changed.delegate=\"onSelectionChanged($event)\">\n                  <img src=\"../images/collections-sample-1.jpg\" alt=\"\" class=\"circle md-collection-selector__hover\">\n                </md-collection-selector>\n                <span class=\"accent-text title\">${actor.name}</span>\n                <p style=\"max-width: 80%;\">${actor.description}</p>\n                <div class=\"secondary-content\">\n                  <i class=\"material-icons\">send</i>\n                </div>\n              </md-collection-item>\n            </md-collection>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n      <div class=\"col s12\">\n        <md-card md-title=\"Console log\">\n          <logger class=\"z-depth-1\" view-model.ref=\"logger\"></logger>\n        </md-card>\n      </div>\n    </div>\n    </section>\n  </section>\n</template>\n"; });
define('text!styles/styles.css', ['module'], function(module) { module.exports = "/*@import \"material-colors.css\";*/\n\nbody, html {\n  margin: 0;\n  /*font-family: Arial, sans-serif;*/\n}\n\n.view-about-images div {\n  height: 205px;\n  text-align: center;\n  line-height: 205px;\n  margin-bottom: 40px;\n}\n\n.view-about-images > div:nth-child(3) > img {\n  margin-top: 60px;\n}\n\nau-code pre {\n  display: block;\n  padding: 9.5px;\n  margin: 0 0 10px;\n  font-size: 13px;\n  line-height: 1.42857143;\n  color: #333;\n  /*word-break: break-all;\n  word-wrap: break-word;*/\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.splash {\n    text-align: center;\n    margin: 10% 0 0 0;\n    box-sizing: border-box;\n}\n\n.splash .message {\n    font-size: 44px;\n    line-height: 44px;\n    font-family: Arial, sans-serif;\n    margin-bottom: 2rem;\n}\n\n.splash .subtitle {\n    font-size: 28px;\n\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear;\n}\n\n.splash .fa-spinner {\n    text-align: center;\n    display: inline-block;\n    font-size: 72px;\n    margin-top: 50px;\n}\n\n.page-host {\n    overflow-x: hidden;\n    overflow-y: auto;\n}\n\nsection {\n    margin: 0 20px;\n}\n\n.navbar-nav li.loader {\n    margin: 12px 24px 0 6px;\n}\n\n.pictureDetail {\n    max-width: 425px;\n}\n\n/* animate page transitions */\nsection.au-enter-active {\n  -webkit-animation: fadeInRight 1s;\n  animation: fadeInRight 1s;\n}\n\n/* animate flickr image entry */\ndiv.au-stagger {\n  /* 50ms will be applied between each successive enter operation */\n  -webkit-animation-delay:50ms;\n  animation-delay:50ms;\n}\n\n.flickr-img.au-enter {\n  opacity: 0!important;\n}\n\n.flickr-img.au-enter-active {\n  -webkit-animation: fadeIn 2s;\n  animation: fadeIn 2s;\n}\n\n.flickr-img > a > img {\n  width: 260px;\n  height: 180px;\n}\n\n\n/* animation definitions */\n@-webkit-keyframes fadeInRight {\n  0% {\n    opacity: 0;\n    -webkit-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0)\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: none;\n    transform: none\n  }\n}\n\n@keyframes fadeInRight {\n  0% {\n    opacity: 0;\n    -webkit-transform: translate3d(100%, 0, 0);\n    -ms-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0)\n  }\n  100% {\n    opacity: 1;\n    -webkit-transform: none;\n    -ms-transform: none;\n    transform: none\n  }\n}\n\n\n@-webkit-keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.overlay\n{\n    position: absolute;\n\n    left: 0;\n    top: 0;\n    min-width:100%;\n    min-height: 100%;\n    height:100%;\n    z-index: 10;\n    background: rgba(0,0,0,0.3);\n}\n\n\n.overlay-message\n{\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    z-index: 11;\n    font-size:50pt;\n    transform: translate(-50%, -50%);\n}\n\n.hljs {\n  background: inherit !important;\n}\n\n.panel-hover:hover {\n  cursor: pointer;\n}\n\n.panel-hover:hover strong {\n  text-decoration: underline !important;\n  cursor: pointer;\n}\n\n.k-content .row > *,\n.k-content .row > *::before,\n.k-content .row > *::after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n.box {\n    margin: 4.5em 0;\n    padding: 3em;\n    background-color: rgba(20,53,80,0.038);\n    border: 1px solid rgba(20,53,80,0.05);\n}\n\n.console div\n{\n    background-position: 6px -95px;\n    border-bottom: 1px solid #DDD;\n    padding: 5px 10px;\n    height: 2em;\n    line-height: 2em;\n    vertical-align: middle;\n    color: #333;\n    font: 11px Consolas, Monaco, \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace;\n}\n\n.theme-window {\n  background-color: #ebeef0;\n}\n\n.tc-theme-list {\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.demo-section.k-content {\n  box-sizing: content-box;\n}\n\n.tc-item-selected {\n  background-color: #AAA;\n}\n\nmenu {\n  margin: 0;\n  padding: 0;\n}\n\n.k-button:focus:not(.k-state-disabled):not([disabled]), .k-menu .k-item>.k-link:focus {\n  text-decoration: none;\n}\n\n.help-docs .k-header {\n  font-size: 18px;\n}\n\n#doc > .col-md-3, #doc > .col-md-9 {\n  height: 790px;\n  overflow-y: scroll;\n}\n\n#doc {\n  margin: 0;\n}\n\n.box li {\n  list-style-type: none;\n}\n\n.k-block>.k-header, .k-window-titlebar {\n  position: relative !important;\n}\n\nh1, .h1, h2, .h2, h3, .h3 {\n  margin-top: 0 !important;\n}\n\n/* show all line numbers */\nli.L0, li.L1, li.L2, li.L3,\nli.L5, li.L6, li.L7, li.L8 {\n  list-style-type: decimal !important\n}\n.date-picker + i.material-icons {\n  margin-left: -24px;\n  line-height: 1;\n  margin-top: 12px;\n  cursor: pointer;\n}\n\n.picker {\n  position: fixed !important;\n}\n"; });
define('text!project-status/controls.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"./controls.css\"></require>\n  <section>\n  <div class=\"row\">\n   <div class=\"col s12\">\n     <h4>Component catalog</h4>\n        <div>\n           <!-- page title - single column -->\n           <div class=\"row\">\n             <div class=\"col s6 m4 l2\" style=\"font-size:18px\">\n               <img src=\"../images/blue.png\">\n                 implemented controls\n               </div>\n               <div class=\"col s6 m4 l2\" style=\"font-size:18px\">\n                 <img src=\"../images/orange.png\">\n                 controls in development\n             </div>\n           </div>\n       <div class=\"row\">\n\n         <div class=\"col s12 m3 l2\" repeat.for=\"category of categories\">\n           <md-card md-title=\"${category.title}\">\n             <div repeat.for=\"ctrl of category.controls\" class=\"control-info ${ ctrl.status }\">\n               <a if.bind=\"ctrl.link\" href=\"${ ctrl.link }\">${ ctrl.title }</a>\n               <span if.bind=\"!ctrl.link\">${ ctrl.title }</span>\n             </div>\n           </md-card>\n         </div>\n\n       </div>\n </div>\n </div>\n </div>\n </section>\n</template>\n"; });
define('text!samples/index.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"./menu\"></require>\n  <menu></menu>\n  <router-view></router-view>\n</template>\n"; });
define('text!samples/menu.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"./menu.css\"></require>\n  <style>\n    @media all and (min-width: 992px) {\n      header, main, footer {\n        padding-left: 300px;\n      }\n      md-navbar[md-fixed=\"true\"] nav {\n        padding-right: 300px;\n      }\n    }\n\n    @media all and (max-width: 992px) {\n        header, main, footer {\n            padding-left: 0;\n        }\n        md-navbar[md-fixed=\"true\"] nav {\n          padding-right: 0;\n        }\n    }\n  </style>\n  <md-sidenav view-model.ref=\"sideNav\" md-fixed=\"true\" md-edge=\"left\">\n    <ul md-collapsible=\"accordion: true;\">\n      <li repeat.for=\"cat of categories\">\n        <div md-waves class=\"collapsible-header\">\n          <span>${ cat.title }</span>\n          <i class=\"material-icons right\">arrow_drop_down</i>\n        </div>\n        <div class=\"collapsible-body\">\n          <ul>\n            <template repeat.for=\"ctrl of cat.controls\">\n              <li md-waves=\"color: primary;\" if.bind=\"!!ctrl.link\" class=\"${ activeItem === ctrl.link ? 'active' : '' }\">\n                <a href.bind=\"ctrl.link\" click.delegate=\"setActive(ctrl)\">${ ctrl.title }<span show.bind=\"ctrl.status == 'wip'\" md-badge>WIP</span></a>\n              </li>\n            </template>\n          </ul>\n        </div>\n      </li>\n    </ul>\n  </md-sidenav>\n</template>\n"; });
define('text!samples/sample-runner.html', ['module'], function(module) { module.exports = "<template>\n  <require from=\"./sample-runner.css\"></require>\n  <div class=\"row sample-runner\">\n    <div class=\"col s12 m4 l2\">\n      <md-well router.bind=\"router\"></md-well>\n    </div>\n    <div class=\"col s12 m8 l8\">\n      <md-card md-title.bind=\"title\">\n        <a class=\"md-catalog__play-button\" md-button=\"flat: true;\" md-waves href=\"https://gist.run/?id=${sample.gist}\" show.bind=\"sample.gist\" target=\"_blank\">\n          <i class=\"left material-icons\">play_arrow</i>play\n        </a>\n        <md-progress md-type=\"circular\" md-size=\"small\" md-color=\"flashing\" show.bind=\"loading\"></md-progress>\n        <div ref=\"sampleTarget\" show.bind=\"!loading\"></div>\n      </md-card>\n      <ul if.bind=\"tabs.length > 0\" md-tabs class=\"z-depth-1\">\n        <li repeat.for=\"tab of tabs\"><a href.bind=\"'#tab' + $index\">${tab.title}</a></li>\n      </ul>\n      <div repeat.for=\"tab of tabs\" class=\"z-depth-1\" id.bind=\"'tab' + $index\">\n        <au-code language.bind=\"tab.language\" text.bind=\"getSampleFile(tab.filename)\"></au-code>\n      </div>\n    </div>\n  </div>\n</template>\n"; });
define('text!shared/logger.html', ['module'], function(module) { module.exports = "<template>\n  <div class=\"console\">\n  </div>\n</template>\n"; });
//# sourceMappingURL=app-bundle.js.map